
This file details the list of the codes and their purposes!

------------------------------------------------------------------------------------------------------------------------
Name:       <generate_scenarios.m (in directory Mstlab_codes)>
Purpose:
This code generates scenarios using MATPOWER!
------------------------------------------------------------------------------------------------------------------------
Name:       <Guide_how_to_read_matlab_files.py>
Purpose:
This code is generally not used in this project! It gives an example of how to load an MAT file (generated by MATLAB)...
... and load it as an ndarray file!
------------------------------------------------------------------------------------------------------------------------
Name:       <Read_Scenarios_Generated_by_Matlab.py>
Purpose:
This code reads the MAT files generated by matlab, converts them to ndarray, and saves the ndarrays in the directory ...
... named <Data>
------------------------------------------------------------------------------------------------------------------------
Name:       <guide_run_DCOPF_using_MATPOWER.m>
Purpose:
This code is generally not used in this project! It gives an example of how to use MATPOWER, especially for DC-OPF!
------------------------------------------------------------------------------------------------------------------------
Name:       <NN_classification___without_cross_validation>
Purpose:
This code uses Neural Networks (NN) for the purpose of classification! This code does not use cross validation!
------------------------------------------------------------------------------------------------------------------------
Name:       <NN_classification___with_cross_validation>
Purpose:
This code uses Neural Networks (NN) for the purpose of classification! This code uses cross validation!
------------------------------------------------------------------------------------------------------------------------
Name:       <NN_classification___single_line___without_cross_validation>
Purpose:
This code picks a set of line, and for each line we train a classifier to predict whether ...
... that line is congested or not. Then, we combine the output of these single classifiers ...
... to see whether we can predict the congestion pattern or not.
------------------------------------------------------------------------------------------------------------------------
Name:
Purpose:

------------------------------------------------------------------------------------------------------------------------
Name:
Purpose:

------------------------------------------------------------------------------------------------------------------------
Name:
Purpose:

------------------------------------------------------------------------------------------------------------------------
Name:
Purpose:

------------------------------------------------------------------------------------------------------------------------
